.lottery-container {
  min-height: 100vh;
  background: linear-gradient(135deg, #c11920 0%, #8b1318 100%);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
    animation: float 20s ease-in-out infinite;
  }
}

.toolbar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.9) !important;
  
  
  .title {
    margin-left: 10px;
    font-size: 1.3rem;
    font-weight: bold;
  }
  
  .spacer {
    flex: 1 1 auto;
  }
  
  .remaining-count {
    font-size: 1.1rem;
    margin-right: 20px;
    padding: 8px 16px;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 20px;
  }
}

.lottery-content {
  padding-top: 100px;
  padding-bottom: 40px;
  position: relative;
  max-width: 1400px;
  margin: 0 auto;
}

.instruction {
  text-align: center;
  color: white;
  margin-bottom: 40px;
  animation: fadeIn 1s ease-out;
  
  h2 {
    font-size: 2rem;
    margin-bottom: 10px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  p {
    font-size: 1.2rem;
    opacity: 0.9;
  }
  
  &.drawing {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
    
    mat-progress-spinner {
      ::ng-deep circle {
        stroke: white !important;
      }
    }
  }
}

.panels-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 15px;
  padding: 0 20px;
  justify-items: center;
  
  @media (min-width: 1200px) {
    grid-template-columns: repeat(8, 1fr);
  }
  
  @media (min-width: 768px) and (max-width: 1199px) {
    grid-template-columns: repeat(6, 1fr);
  }
  
  @media (max-width: 767px) {
    grid-template-columns: repeat(4, 1fr);
  }
  
  @media (max-width: 480px) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.panel-wrapper {
  perspective: 1000px;
  cursor: pointer;
  width: 100%;
  max-width: 140px;
  
  .panel {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
    transform-style: preserve-3d;
    transition: transform 0.6s;
    
    &.selected {
      animation: glow 0.5s ease-in-out infinite alternate;
    }
    
    &.disabled {
      cursor: not-allowed;
      opacity: 0.7;
    }
    
    .panel-front,
    .panel-back {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      backface-visibility: hidden;
      border-radius: 12px;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }
    
    .panel-front {
      background: linear-gradient(135deg, #fff 0%, #f5f5f5 100%);
      
      
      &:hover:not(.disabled) {
        transform: translateY(-8px) scale(1.05);
        box-shadow: 0 12px 24px rgba(0, 0, 0, 0.25);
        
        .panel-number {
          color: #e84850;
          transform: scale(1.1);
          text-shadow: 2px 2px 6px rgba(232, 72, 80, 0.3);
          
        }
      }
      
      .panel-number {
        font-size: 3rem;
        font-weight: 900;
        color: #c11920;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        letter-spacing: -0.02em;
        user-select: none;
        transition: all 0.3s ease;
        
      }
    }
    
    .panel-back {
      background: linear-gradient(135deg, #c11920 0%, #8b1318 100%);
      transform: rotateY(180deg);
      
      .result-emoji {
        font-size: 64px;
      }
    }
    
    &.flipped {
      .panel-front {
        transform: rotateY(180deg);
      }
      
      .panel-back {
        transform: rotateY(0);
      }
    }
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  33% {
    transform: translateY(-20px) rotate(1deg);
  }
  66% {
    transform: translateY(20px) rotate(-1deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes glow {
  from {
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
  }
  to {
    box-shadow: 0 0 20px rgba(255, 255, 255, 1), 0 0 30px rgba(255, 255, 255, 0.8);
  }
}